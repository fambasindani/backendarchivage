<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\CentreOrdonnancement;
use Carbon\Carbon;


class CentreOrdonnancementController extends Controller
{

public function getAll()
{
    // R√©cup√©rer tous les enregistrements o√π statut = 1
    // Les plus r√©cents (insertions) apparaissent en premier gr√¢ce au tri par ID d√©croissant
    return CentreOrdonnancement::with('articleBudgetaire')
                                 -> where('statut', 1)
                                ->orderBy('id', 'desc') // tri d√©croissant
                                ->paginate(10);
}


public function getcentre()
{
    // R√©cup√©rer tous les enregistrements o√π statut = 1
    // Les plus r√©cents (insertions) apparaissent en premier gr√¢ce au tri par ID d√©croissant
    return CentreOrdonnancement:: where('statut', 1)
                                ->orderBy('id', 'desc') // tri d√©croissant
                                ->paginate(10);
}


public function searchcentre(Request $request)
{
    // Recherche avec statut = 1
    $query = CentreOrdonnancement::with('articleBudgetaire')
    ->where('statut', 1);

    if ($request->has('search')) {
        $query->where('nom', 'like', '%' . $request->search . '%');
    }

    return $query->paginate(10);
}



public function addcentre(Request $request)
{
    $request->validate([
        'nom' => 'required|string|max:255|unique:centre_ordonnancements', // Validation unique
        'description' => 'required|string|max:255',
        'id_ministere' => 'required|integer', // Validation requise
    ], [
        'id_ministere.required' => 'Veuillez s√©lectionner le champ nom du minist√®re.',
        'id_ministere.integer' => 'Veuillez s√©lectionner le champ nom du minist√®re.',
    ]);

    // Cr√©er un nouvel enregistrement dans la table
    CentreOrdonnancement::create([
        'nom' => $request->nom,
        'description' => $request->description,
        'statut' => "1",
        'id_ministere' => $request->id_ministere, // Ajout du champ id_ministere
    ]);

    return response()->json(['message' => 'Centre ordonnancement ajout√© avec succ√®s']);
}






public function updateCentre(Request $request, $id)
{
    // üß© R√©cup√©ration du centre
    $centre = CentreOrdonnancement::findOrFail($id);

    // ‚úÖ Validation des donn√©es
    $request->validate([
        'nom' => 'required|string|max:255', // Validation unique
        'description' => 'required|string|max:255',
        'id_ministere' => 'required|integer', // Validation requise
    ], [
        'id_ministere.required' => 'Veuillez s√©lectionner le champ nom du minist√®re.',
        'id_ministere.integer' => 'Veuillez s√©lectionner le champ nom du minist√®re.',
    ]);

    // üõ† Mise √† jour des champs sp√©cifiques
    $centre->nom = $request->nom;
    $centre->description = $request->description;
    $centre->id_ministere = $request->id_ministere;
    $centre->save();

    // üì¶ R√©ponse JSON
     return response()->json(['message' => 'Centre ordonnancement mis √† jour avec succ√®s']);
}


    public function editcentre($id)
    {
        return CentreOrdonnancement::findOrFail($id);
    }

    

   public function supprimercentre($id)
    {
        $centreOrdonnancement = CentreOrdonnancement::findOrFail($id);
        
        // Met √† jour le statut √† '0' au lieu de supprimer
        $centreOrdonnancement->update(['statut' => '0']);
        
        return response()->json(['message' => 'Statut mis √† jour avec succ√®s']);
    }





















    
}
